/*
 * Smart Port API
 * Solent university devops https://github.com/com619-2021
 *
 * OpenAPI spec version: v1
 * Contact: craig.gallen@solent.ac.uk
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package solent.ac.uk.devops.traffic.client.swagger.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import solent.ac.uk.devops.traffic.client.swagger.model.OrderChangeRequestHref;
import solent.ac.uk.devops.traffic.client.swagger.model.OrderHref;
import solent.ac.uk.devops.traffic.client.swagger.model.PartyHref;
import solent.ac.uk.devops.traffic.client.swagger.model.ResourceHref;
/**
 * Order
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-11-19T14:34:17.894448800Z[Europe/London]")
public class Order {
  @JsonProperty("changeRequests")
  private List<OrderChangeRequestHref> changeRequests = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("endDate")
  private OffsetDateTime endDate = null;

  @JsonProperty("href")
  private String href = null;

  @JsonProperty("id")
  private Long id = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("orderDate")
  private OffsetDateTime orderDate = null;

  @JsonProperty("orderOwner")
  private PartyHref orderOwner = null;

  @JsonProperty("parentOrder")
  private OrderHref parentOrder = null;

  /**
   * Gets or Sets resourceAccess
   */
  public enum ResourceAccessEnum {
    EXTERNAL("EXTERNAL"),
    INTERNAL("INTERNAL");

    private String value;

    ResourceAccessEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static ResourceAccessEnum fromValue(String text) {
      for (ResourceAccessEnum b : ResourceAccessEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("resourceAccess")
  private ResourceAccessEnum resourceAccess = null;

  @JsonProperty("resourceOrService")
  private List<ResourceHref> resourceOrService = null;

  @JsonProperty("startDate")
  private OffsetDateTime startDate = null;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    IN_PROGRESS("IN_PROGRESS"),
    CANCELLED("CANCELLED"),
    CHANGE_REQUESTED("CHANGE_REQUESTED"),
    CONFIRMED("CONFIRMED"),
    ACKNOWLEGED("ACKNOWLEGED"),
    PLACED("PLACED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("subOrders")
  private List<OrderHref> subOrders = null;

  @JsonProperty("uuid")
  private String uuid = null;

  public Order changeRequests(List<OrderChangeRequestHref> changeRequests) {
    this.changeRequests = changeRequests;
    return this;
  }

  public Order addChangeRequestsItem(OrderChangeRequestHref changeRequestsItem) {
    if (this.changeRequests == null) {
      this.changeRequests = new ArrayList<>();
    }
    this.changeRequests.add(changeRequestsItem);
    return this;
  }

   /**
   * Get changeRequests
   * @return changeRequests
  **/
  @Schema(description = "")
  public List<OrderChangeRequestHref> getChangeRequests() {
    return changeRequests;
  }

  public void setChangeRequests(List<OrderChangeRequestHref> changeRequests) {
    this.changeRequests = changeRequests;
  }

  public Order description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Order endDate(OffsetDateTime endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @Schema(description = "")
  public OffsetDateTime getEndDate() {
    return endDate;
  }

  public void setEndDate(OffsetDateTime endDate) {
    this.endDate = endDate;
  }

  public Order href(String href) {
    this.href = href;
    return this;
  }

   /**
   * Get href
   * @return href
  **/
  @Schema(description = "")
  public String getHref() {
    return href;
  }

  public void setHref(String href) {
    this.href = href;
  }

  public Order id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Order name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Order orderDate(OffsetDateTime orderDate) {
    this.orderDate = orderDate;
    return this;
  }

   /**
   * Get orderDate
   * @return orderDate
  **/
  @Schema(description = "")
  public OffsetDateTime getOrderDate() {
    return orderDate;
  }

  public void setOrderDate(OffsetDateTime orderDate) {
    this.orderDate = orderDate;
  }

  public Order orderOwner(PartyHref orderOwner) {
    this.orderOwner = orderOwner;
    return this;
  }

   /**
   * Get orderOwner
   * @return orderOwner
  **/
  @Schema(description = "")
  public PartyHref getOrderOwner() {
    return orderOwner;
  }

  public void setOrderOwner(PartyHref orderOwner) {
    this.orderOwner = orderOwner;
  }

  public Order parentOrder(OrderHref parentOrder) {
    this.parentOrder = parentOrder;
    return this;
  }

   /**
   * Get parentOrder
   * @return parentOrder
  **/
  @Schema(description = "")
  public OrderHref getParentOrder() {
    return parentOrder;
  }

  public void setParentOrder(OrderHref parentOrder) {
    this.parentOrder = parentOrder;
  }

  public Order resourceAccess(ResourceAccessEnum resourceAccess) {
    this.resourceAccess = resourceAccess;
    return this;
  }

   /**
   * Get resourceAccess
   * @return resourceAccess
  **/
  @Schema(description = "")
  public ResourceAccessEnum getResourceAccess() {
    return resourceAccess;
  }

  public void setResourceAccess(ResourceAccessEnum resourceAccess) {
    this.resourceAccess = resourceAccess;
  }

  public Order resourceOrService(List<ResourceHref> resourceOrService) {
    this.resourceOrService = resourceOrService;
    return this;
  }

  public Order addResourceOrServiceItem(ResourceHref resourceOrServiceItem) {
    if (this.resourceOrService == null) {
      this.resourceOrService = new ArrayList<>();
    }
    this.resourceOrService.add(resourceOrServiceItem);
    return this;
  }

   /**
   * Get resourceOrService
   * @return resourceOrService
  **/
  @Schema(description = "")
  public List<ResourceHref> getResourceOrService() {
    return resourceOrService;
  }

  public void setResourceOrService(List<ResourceHref> resourceOrService) {
    this.resourceOrService = resourceOrService;
  }

  public Order startDate(OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @Schema(description = "")
  public OffsetDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }

  public Order status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public Order subOrders(List<OrderHref> subOrders) {
    this.subOrders = subOrders;
    return this;
  }

  public Order addSubOrdersItem(OrderHref subOrdersItem) {
    if (this.subOrders == null) {
      this.subOrders = new ArrayList<>();
    }
    this.subOrders.add(subOrdersItem);
    return this;
  }

   /**
   * Get subOrders
   * @return subOrders
  **/
  @Schema(description = "")
  public List<OrderHref> getSubOrders() {
    return subOrders;
  }

  public void setSubOrders(List<OrderHref> subOrders) {
    this.subOrders = subOrders;
  }

  public Order uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @Schema(description = "")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Order order = (Order) o;
    return Objects.equals(this.changeRequests, order.changeRequests) &&
        Objects.equals(this.description, order.description) &&
        Objects.equals(this.endDate, order.endDate) &&
        Objects.equals(this.href, order.href) &&
        Objects.equals(this.id, order.id) &&
        Objects.equals(this.name, order.name) &&
        Objects.equals(this.orderDate, order.orderDate) &&
        Objects.equals(this.orderOwner, order.orderOwner) &&
        Objects.equals(this.parentOrder, order.parentOrder) &&
        Objects.equals(this.resourceAccess, order.resourceAccess) &&
        Objects.equals(this.resourceOrService, order.resourceOrService) &&
        Objects.equals(this.startDate, order.startDate) &&
        Objects.equals(this.status, order.status) &&
        Objects.equals(this.subOrders, order.subOrders) &&
        Objects.equals(this.uuid, order.uuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(changeRequests, description, endDate, href, id, name, orderDate, orderOwner, parentOrder, resourceAccess, resourceOrService, startDate, status, subOrders, uuid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Order {\n");
    
    sb.append("    changeRequests: ").append(toIndentedString(changeRequests)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    orderDate: ").append(toIndentedString(orderDate)).append("\n");
    sb.append("    orderOwner: ").append(toIndentedString(orderOwner)).append("\n");
    sb.append("    parentOrder: ").append(toIndentedString(parentOrder)).append("\n");
    sb.append("    resourceAccess: ").append(toIndentedString(resourceAccess)).append("\n");
    sb.append("    resourceOrService: ").append(toIndentedString(resourceOrService)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    subOrders: ").append(toIndentedString(subOrders)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
