/*
 * Smart Port API
 * Solent university devops https://github.com/com619-2021
 *
 * OpenAPI spec version: v1
 * Contact: craig.gallen@solent.ac.uk
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package solent.ac.uk.devops.traffic.client.swagger.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import solent.ac.uk.devops.traffic.client.swagger.model.Order;
import solent.ac.uk.devops.traffic.client.swagger.model.OrderChangeRequest;
import solent.ac.uk.devops.traffic.client.swagger.model.Party;
import solent.ac.uk.devops.traffic.client.swagger.model.Resource;
import solent.ac.uk.devops.traffic.client.swagger.model.ResourceCatalog;
import solent.ac.uk.devops.traffic.client.swagger.model.User;
/**
 * ReplyMessage
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-11-19T14:34:17.894448800Z[Europe/London]")
public class ReplyMessage {
  @JsonProperty("code")
  private Integer code = null;

  @JsonProperty("debugMessage")
  private String debugMessage = null;

  @JsonProperty("limit")
  private Integer limit = null;

  @JsonProperty("offset")
  private Integer offset = null;

  @JsonProperty("orderChangeRequestList")
  private List<OrderChangeRequest> orderChangeRequestList = null;

  @JsonProperty("orderList")
  private List<Order> orderList = null;

  @JsonProperty("partyList")
  private List<Party> partyList = null;

  @JsonProperty("resourceCatalogList")
  private List<ResourceCatalog> resourceCatalogList = null;

  @JsonProperty("resourceList")
  private List<Resource> resourceList = null;

  @JsonProperty("stringList")
  private List<String> stringList = null;

  @JsonProperty("totalCount")
  private Long totalCount = null;

  @JsonProperty("userList")
  private List<User> userList = null;

  public ReplyMessage code(Integer code) {
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @Schema(description = "")
  public Integer getCode() {
    return code;
  }

  public void setCode(Integer code) {
    this.code = code;
  }

  public ReplyMessage debugMessage(String debugMessage) {
    this.debugMessage = debugMessage;
    return this;
  }

   /**
   * Get debugMessage
   * @return debugMessage
  **/
  @Schema(description = "")
  public String getDebugMessage() {
    return debugMessage;
  }

  public void setDebugMessage(String debugMessage) {
    this.debugMessage = debugMessage;
  }

  public ReplyMessage limit(Integer limit) {
    this.limit = limit;
    return this;
  }

   /**
   * Get limit
   * @return limit
  **/
  @Schema(description = "")
  public Integer getLimit() {
    return limit;
  }

  public void setLimit(Integer limit) {
    this.limit = limit;
  }

  public ReplyMessage offset(Integer offset) {
    this.offset = offset;
    return this;
  }

   /**
   * Get offset
   * @return offset
  **/
  @Schema(description = "")
  public Integer getOffset() {
    return offset;
  }

  public void setOffset(Integer offset) {
    this.offset = offset;
  }

  public ReplyMessage orderChangeRequestList(List<OrderChangeRequest> orderChangeRequestList) {
    this.orderChangeRequestList = orderChangeRequestList;
    return this;
  }

  public ReplyMessage addOrderChangeRequestListItem(OrderChangeRequest orderChangeRequestListItem) {
    if (this.orderChangeRequestList == null) {
      this.orderChangeRequestList = new ArrayList<>();
    }
    this.orderChangeRequestList.add(orderChangeRequestListItem);
    return this;
  }

   /**
   * Get orderChangeRequestList
   * @return orderChangeRequestList
  **/
  @Schema(description = "")
  public List<OrderChangeRequest> getOrderChangeRequestList() {
    return orderChangeRequestList;
  }

  public void setOrderChangeRequestList(List<OrderChangeRequest> orderChangeRequestList) {
    this.orderChangeRequestList = orderChangeRequestList;
  }

  public ReplyMessage orderList(List<Order> orderList) {
    this.orderList = orderList;
    return this;
  }

  public ReplyMessage addOrderListItem(Order orderListItem) {
    if (this.orderList == null) {
      this.orderList = new ArrayList<>();
    }
    this.orderList.add(orderListItem);
    return this;
  }

   /**
   * Get orderList
   * @return orderList
  **/
  @Schema(description = "")
  public List<Order> getOrderList() {
    return orderList;
  }

  public void setOrderList(List<Order> orderList) {
    this.orderList = orderList;
  }

  public ReplyMessage partyList(List<Party> partyList) {
    this.partyList = partyList;
    return this;
  }

  public ReplyMessage addPartyListItem(Party partyListItem) {
    if (this.partyList == null) {
      this.partyList = new ArrayList<>();
    }
    this.partyList.add(partyListItem);
    return this;
  }

   /**
   * Get partyList
   * @return partyList
  **/
  @Schema(description = "")
  public List<Party> getPartyList() {
    return partyList;
  }

  public void setPartyList(List<Party> partyList) {
    this.partyList = partyList;
  }

  public ReplyMessage resourceCatalogList(List<ResourceCatalog> resourceCatalogList) {
    this.resourceCatalogList = resourceCatalogList;
    return this;
  }

  public ReplyMessage addResourceCatalogListItem(ResourceCatalog resourceCatalogListItem) {
    if (this.resourceCatalogList == null) {
      this.resourceCatalogList = new ArrayList<>();
    }
    this.resourceCatalogList.add(resourceCatalogListItem);
    return this;
  }

   /**
   * Get resourceCatalogList
   * @return resourceCatalogList
  **/
  @Schema(description = "")
  public List<ResourceCatalog> getResourceCatalogList() {
    return resourceCatalogList;
  }

  public void setResourceCatalogList(List<ResourceCatalog> resourceCatalogList) {
    this.resourceCatalogList = resourceCatalogList;
  }

  public ReplyMessage resourceList(List<Resource> resourceList) {
    this.resourceList = resourceList;
    return this;
  }

  public ReplyMessage addResourceListItem(Resource resourceListItem) {
    if (this.resourceList == null) {
      this.resourceList = new ArrayList<>();
    }
    this.resourceList.add(resourceListItem);
    return this;
  }

   /**
   * Get resourceList
   * @return resourceList
  **/
  @Schema(description = "")
  public List<Resource> getResourceList() {
    return resourceList;
  }

  public void setResourceList(List<Resource> resourceList) {
    this.resourceList = resourceList;
  }

  public ReplyMessage stringList(List<String> stringList) {
    this.stringList = stringList;
    return this;
  }

  public ReplyMessage addStringListItem(String stringListItem) {
    if (this.stringList == null) {
      this.stringList = new ArrayList<>();
    }
    this.stringList.add(stringListItem);
    return this;
  }

   /**
   * Get stringList
   * @return stringList
  **/
  @Schema(description = "")
  public List<String> getStringList() {
    return stringList;
  }

  public void setStringList(List<String> stringList) {
    this.stringList = stringList;
  }

  public ReplyMessage totalCount(Long totalCount) {
    this.totalCount = totalCount;
    return this;
  }

   /**
   * Get totalCount
   * @return totalCount
  **/
  @Schema(description = "")
  public Long getTotalCount() {
    return totalCount;
  }

  public void setTotalCount(Long totalCount) {
    this.totalCount = totalCount;
  }

  public ReplyMessage userList(List<User> userList) {
    this.userList = userList;
    return this;
  }

  public ReplyMessage addUserListItem(User userListItem) {
    if (this.userList == null) {
      this.userList = new ArrayList<>();
    }
    this.userList.add(userListItem);
    return this;
  }

   /**
   * Get userList
   * @return userList
  **/
  @Schema(description = "")
  public List<User> getUserList() {
    return userList;
  }

  public void setUserList(List<User> userList) {
    this.userList = userList;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReplyMessage replyMessage = (ReplyMessage) o;
    return Objects.equals(this.code, replyMessage.code) &&
        Objects.equals(this.debugMessage, replyMessage.debugMessage) &&
        Objects.equals(this.limit, replyMessage.limit) &&
        Objects.equals(this.offset, replyMessage.offset) &&
        Objects.equals(this.orderChangeRequestList, replyMessage.orderChangeRequestList) &&
        Objects.equals(this.orderList, replyMessage.orderList) &&
        Objects.equals(this.partyList, replyMessage.partyList) &&
        Objects.equals(this.resourceCatalogList, replyMessage.resourceCatalogList) &&
        Objects.equals(this.resourceList, replyMessage.resourceList) &&
        Objects.equals(this.stringList, replyMessage.stringList) &&
        Objects.equals(this.totalCount, replyMessage.totalCount) &&
        Objects.equals(this.userList, replyMessage.userList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, debugMessage, limit, offset, orderChangeRequestList, orderList, partyList, resourceCatalogList, resourceList, stringList, totalCount, userList);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReplyMessage {\n");
    
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    debugMessage: ").append(toIndentedString(debugMessage)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    orderChangeRequestList: ").append(toIndentedString(orderChangeRequestList)).append("\n");
    sb.append("    orderList: ").append(toIndentedString(orderList)).append("\n");
    sb.append("    partyList: ").append(toIndentedString(partyList)).append("\n");
    sb.append("    resourceCatalogList: ").append(toIndentedString(resourceCatalogList)).append("\n");
    sb.append("    resourceList: ").append(toIndentedString(resourceList)).append("\n");
    sb.append("    stringList: ").append(toIndentedString(stringList)).append("\n");
    sb.append("    totalCount: ").append(toIndentedString(totalCount)).append("\n");
    sb.append("    userList: ").append(toIndentedString(userList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
