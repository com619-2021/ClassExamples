/*
 * Smart Port API
 * Solent university devops https://github.com/com619-2021
 *
 * OpenAPI spec version: v1
 * Contact: craig.gallen@solent.ac.uk
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package solent.ac.uk.devops.traffic.client.swagger.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import solent.ac.uk.devops.traffic.client.swagger.model.Address;
import solent.ac.uk.devops.traffic.client.swagger.model.User;
/**
 * Party
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-11-19T14:34:17.894448800Z[Europe/London]")
public class Party {
  @JsonProperty("address")
  private Address address = null;

  @JsonProperty("enabled")
  private Boolean enabled = null;

  @JsonProperty("firstName")
  private String firstName = null;

  @JsonProperty("href")
  private String href = null;

  @JsonProperty("id")
  private Long id = null;

  /**
   * Gets or Sets partyRole
   */
  public enum PartyRoleEnum {
    UNDEFINED("UNDEFINED"),
    SELLER("SELLER"),
    BUYER("BUYER");

    private String value;

    PartyRoleEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static PartyRoleEnum fromValue(String text) {
      for (PartyRoleEnum b : PartyRoleEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("partyRole")
  private PartyRoleEnum partyRole = null;

  /**
   * Gets or Sets partyStatus
   */
  public enum PartyStatusEnum {
    ACTIVE("ACTIVE"),
    DISABLED("DISABLED");

    private String value;

    PartyStatusEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static PartyStatusEnum fromValue(String text) {
      for (PartyStatusEnum b : PartyStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("partyStatus")
  private PartyStatusEnum partyStatus = null;

  @JsonProperty("secondName")
  private String secondName = null;

  @JsonProperty("users")
  private List<User> users = null;

  @JsonProperty("uuid")
  private String uuid = null;

  public Party address(Address address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @Schema(description = "")
  public Address getAddress() {
    return address;
  }

  public void setAddress(Address address) {
    this.address = address;
  }

  public Party enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @Schema(description = "")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public Party firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
  @Schema(description = "")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public Party href(String href) {
    this.href = href;
    return this;
  }

   /**
   * Get href
   * @return href
  **/
  @Schema(description = "")
  public String getHref() {
    return href;
  }

  public void setHref(String href) {
    this.href = href;
  }

  public Party id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Party partyRole(PartyRoleEnum partyRole) {
    this.partyRole = partyRole;
    return this;
  }

   /**
   * Get partyRole
   * @return partyRole
  **/
  @Schema(description = "")
  public PartyRoleEnum getPartyRole() {
    return partyRole;
  }

  public void setPartyRole(PartyRoleEnum partyRole) {
    this.partyRole = partyRole;
  }

  public Party partyStatus(PartyStatusEnum partyStatus) {
    this.partyStatus = partyStatus;
    return this;
  }

   /**
   * Get partyStatus
   * @return partyStatus
  **/
  @Schema(description = "")
  public PartyStatusEnum getPartyStatus() {
    return partyStatus;
  }

  public void setPartyStatus(PartyStatusEnum partyStatus) {
    this.partyStatus = partyStatus;
  }

  public Party secondName(String secondName) {
    this.secondName = secondName;
    return this;
  }

   /**
   * Get secondName
   * @return secondName
  **/
  @Schema(description = "")
  public String getSecondName() {
    return secondName;
  }

  public void setSecondName(String secondName) {
    this.secondName = secondName;
  }

  public Party users(List<User> users) {
    this.users = users;
    return this;
  }

  public Party addUsersItem(User usersItem) {
    if (this.users == null) {
      this.users = new ArrayList<>();
    }
    this.users.add(usersItem);
    return this;
  }

   /**
   * Get users
   * @return users
  **/
  @Schema(description = "")
  public List<User> getUsers() {
    return users;
  }

  public void setUsers(List<User> users) {
    this.users = users;
  }

  public Party uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @Schema(description = "")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Party party = (Party) o;
    return Objects.equals(this.address, party.address) &&
        Objects.equals(this.enabled, party.enabled) &&
        Objects.equals(this.firstName, party.firstName) &&
        Objects.equals(this.href, party.href) &&
        Objects.equals(this.id, party.id) &&
        Objects.equals(this.partyRole, party.partyRole) &&
        Objects.equals(this.partyStatus, party.partyStatus) &&
        Objects.equals(this.secondName, party.secondName) &&
        Objects.equals(this.users, party.users) &&
        Objects.equals(this.uuid, party.uuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, enabled, firstName, href, id, partyRole, partyStatus, secondName, users, uuid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Party {\n");
    
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    partyRole: ").append(toIndentedString(partyRole)).append("\n");
    sb.append("    partyStatus: ").append(toIndentedString(partyStatus)).append("\n");
    sb.append("    secondName: ").append(toIndentedString(secondName)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
